package lyc.compiler;

import java_cup.runtime.*;

class Parser;


// Terminals

/* ----------------------- OPERADORES ARITMETICOS -----------------------*/

terminal ASSIG;
terminal PLUS;
terminal SUB;
terminal MULT;
terminal DIV;


/* ------------------------ OPERADORES LOGICOS -------------------------- */

terminal EQUAL;
terminal NOT_EQUAL;
terminal GREATER_THAN;
terminal GREATER_THAN_EQUAL;
terminal LESS_THAN;
terminal LESS_THAN_EQUAL;


/* ------------------------ TOKEN DE BLOQUES Y AGRUPAMIENTO ------------- */

terminal OPEN_BRACKET;
terminal CLOSE_BRACKET;
terminal OPEN_SQUARE_BRACKET;
terminal CLOSE_SQUARE_BRACKET;
terminal OPEN_CURLY_BRACKET;
terminal CLOSE_CURLY_BRACKET;

/* ------------------------ PALABRAS RESERVADAS ------------- */

terminal IF;
terminal ELSE;
terminal WHILE;
terminal FOR;



/* ------------------------ OTROS TOKENS ------------------- */

terminal INTEGER_CONSTANT;
terminal IDENTIFIER;

// Non Terminals
non terminal sentence;
non terminal assignment;
non terminal expression;
non terminal term;
non terminal factor;

// Start Symbol Definition
start with sentence;

sentence ::= assignment {: System.out.println("End"); :};
assignment ::= IDENTIFIER ASSIG expression {: System.out.println("Assignment"); :};
expression ::= expression PLUS term {: System.out.println("+"); :};
expression ::= expression SUB term {: System.out.println("-"); :};
expression ::= term {: System.out.println("Expression = Term"); :};
term ::= term MULT factor {: System.out.println("*"); :};
term ::= term DIV factor {: System.out.println("/"); :};
term ::= factor {: System.out.println("Term = factor"); :};
factor ::= IDENTIFIER:id  {: System.out.println("Id: " + id); :};
factor ::= INTEGER_CONSTANT:constant {: System.out.println("Constant: " + constant ); :};
factor ::= OPEN_BRACKET expression CLOSE_BRACKET {: System.out.println("Factor = (Expression)"); :};